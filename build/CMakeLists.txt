
#! @todo List up required libraries

cmake_minimum_required(VERSION 3.10)

function(AddModules subdirectory_top_paths output_top_path)
	foreach(subdirectory_top_path ${subdirectory_top_paths})
		if(NOT EXISTS ${subdirectory_top_path})
			message(FATAL_ERROR "Not found ${subdirectory_top_path}")
		else()
			set(exists_subdirectory_top_paths ${exists_subdirectory_top_paths} ${subdirectory_top_path})
		endif()
	endforeach()

	foreach(exists_subdirectory_top_path ${exists_subdirectory_top_paths})
		get_filename_component(directory_name ${exists_subdirectory_top_path} NAME_WE)
		set(subdirectory_output_path ${output_top_path}/${directory_name})
		file(MAKE_DIRECTORY ${subdirectory_output_path})
		set(module_subdirectory ${exists_subdirectory_top_path}/build)
		add_subdirectory(${module_subdirectory} ${subdirectory_output_path})
	endforeach()
endfunction()

set(SOURCE_TOP_DIRECTORY ../src)

set(EXECUTABLE_OUTPUT_TOP_PATH ../CMakeAutoGenerated)

if(NOT EXISTS ${EXECUTABLE_OUTPUT_TOP_PATH})
	message("Not found executable path")
	file(MAKE_DIRECTORY ${EXECUTABLE_OUTPUT_TOP_PATH})
endif()

set(SUBDIRECTORY_PATHS ${SUBDIRECTORY_PATHS} ${SOURCE_TOP_DIRECTORY}/Tools)
set(SUBDIRECTORY_PATHS ${SUBDIRECTORY_PATHS} ${SOURCE_TOP_DIRECTORY}/RobotStatus)
set(SUBDIRECTORY_PATHS ${SUBDIRECTORY_PATHS} ${SOURCE_TOP_DIRECTORY}/IO)
AddModules("${SUBDIRECTORY_PATHS}" "${EXECUTABLE_OUTPUT_TOP_PATH}")
